---
- hosts: default
  name: default
  become: true

  tasks:
  - name: write /etc/hosts
    file:
      src: hostsfile
      dest: /etc/hosts
    tags: files

  - name: write ~/.bashrc
    file:
      src: .bashy
      dest: ~/.bashrc
    tags: files

  - name: write /etc/yum.conf
    file:
      src: yum.conf
      dest: /etc/yum.conf
    tags: files
 
  - shell: rpm -Uvh http://repos.mesosphere.com/el/7/noarch/RPMS/mesosphere-el-repo-7-1.noarch.rpm
    ignore_errors: true

  - shell: rpm -Uvh http://archive.cloudera.com/cdh4/one-click-install/redhat/6/x86_64/cloudera-cdh-4-0.x86_64.rpm
    ignore_errors: true
  
  - name: install mesos
    yum: 
      name: mesos
      state: latest
    
  - name: install marathon
    yum: 
      name: marathon
      state: latest

  - name: install zookeeper
    yum: 
      name: zookeeper
      state: latest
  
  - name: install zookeeper-server
    yum: 
      name: zookeeper-server
      state: latest

  # need to not --force this and make it idempotent
  - shell: zookeeper-server-initialize --myid=1 --force
    become_user: zookeeper


  - name: Start zookeeper-server
    service: 
      name: zookeeper-server
      state: started
      enabled: yes  

  - name: Start mesos-master
    service: 
      name: mesos-master
      state: started
      enabled: yes  

  - name: Start mesos-slave
    service: 
      name: mesos-slave
      state: started
      enabled: yes

  - name: Start marathon
    service: 
      name: marathon
      state: started
      enabled: yes

  
  # - name: start telegraf
  #   service:
  #     name: telegraf
  #     state: started
  #     enabled: yes
  
  # - name: copy template
  #   template: 
  #     src: telegraf.conf.j2 
  #     dest: /etc/opt/telegraf/telegraf.conf
  #   vars: 
  #     telegraf_flush_retries: 2
  #   notify: restart telegraf
  
  # - name: restart machine
  #   shell: sleep 2 && shutdown -r now "Ansible updates triggered"
  #   async: 1
  #   poll: 0
  #   sudo: true
  #   ignore_errors: true
    

  # handlers:
  #   - name: restart telegraf
  #     service: 
  #       name: telegraf 
  #       state: restarted 
  #       enabled: yes

